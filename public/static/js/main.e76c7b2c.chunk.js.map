{"version":3,"sources":["components/Register/Register.module.css","components/Login/Login.module.css","components/Home/Home.module.css","components/Loader/Loader.module.css","components/Login/Login.js","components/Register/Register.js","components/Home/Home.js","components/Loader/Loader.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Login","setJwt","useState","errorMsg","setErrorMsg","emailRef","useRef","passwordRef","navigate","useNavigate","handleLogin","e","a","preventDefault","fetch","process","method","headers","body","JSON","stringify","email","current","value","password","response","ok","text","className","styles","Card","Header","Title","as","Body","cardBody","Form","onSubmit","Row","Group","group","Label","Control","type","ref","placeholder","Text","Button","variant","to","defaultProps","Register","nameRef","handleRegister","name","replace","Home","userInfo","logout","Container","content","onClick","Loader","App","jwt","setUserInfo","useEffect","res","json","fluid","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e76c7b2c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Register\":\"Register_Register__360gr\",\"fieldGroup\":\"Register_fieldGroup__37Q-N\",\"fieldLabel\":\"Register_fieldLabel__2wkww\",\"group\":\"Register_group__1WHlE\",\"cardBody\":\"Register_cardBody__1WEP-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__16OeA\",\"fieldGroup\":\"Login_fieldGroup__R_eH9\",\"fieldLabel\":\"Login_fieldLabel__V5QSB\",\"group\":\"Login_group__3Setm\",\"cardBody\":\"Login_cardBody__wKdOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__1eAKq\",\"content\":\"Home_content__3CE9b\",\"buttonsWrapper\":\"Home_buttonsWrapper__2gWTp\",\"button\":\"Home_button__34QlL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__2Pl5P\",\"loader\":\"Loader_loader__2OsWL\",\"spin\":\"Loader_spin__1xq9l\"};","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Login.module.css';\nimport { Card, Form, Row, Button } from 'react-bootstrap';\nimport { Link, useNavigate } from 'react-router-dom';\n\nconst Login = ({ setJwt }) => {\n\n  const [ errorMsg, setErrorMsg ] = useState('');\n  const emailRef = useRef('');\n  const passwordRef = useRef('');\n  const navigate = useNavigate();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    // Sends a request to verify if email and password match a user currently in the\n    // database and sends back a jwt for that user containing their id\n    const response = await fetch(`${process.env.REACT_APP_BASE_URL}/auth`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        email: emailRef.current.value,\n        password: passwordRef.current.value\n      })\n    });\n    if (!response.ok) return setErrorMsg(await response.text());\n    \n    setErrorMsg('');\n    // set our jwt as the response body\n    setJwt(await response.text());\n    navigate('../');\n  }\n\n  return (\n  <div className={styles.Login}>\n    <Card>\n      <Card.Header>\n        <Card.Title as='h3'>Login</Card.Title>\n        </Card.Header>\n      <Card.Body className={styles.cardBody}>\n          <Form onSubmit={handleLogin}>\n          <Row className='mb-3'>\n            <Form.Group className={styles.group}>\n              <Form.Label>Email</Form.Label>\n              <Form.Control type='text' ref={emailRef} placeholder='john@email.com' className='mb-1'/>\n              <Form.Text className=\"text-muted\">We won't share your email with anyone, we promise.</Form.Text>\n            </Form.Group>\n            </Row>\n            <Row className='mb-3'>\n            <Form.Group className={styles.group}>\n              <Form.Label>Password</Form.Label>\n              <Form.Control type='password' ref={passwordRef} />\n            </Form.Group>\n            </Row>\n            <Button variant='primary' type='submit' className='mb-2'>Login</Button>\n            \n          </Form>\n          <Link to='/register'>Register here if you don't already have an account.</Link>\n          {errorMsg !== '' && <Card.Text className='text-danger mt-2'>{errorMsg}</Card.Text>}\n      </Card.Body>\n    </Card>\n  </div>\n)}\n\nLogin.propTypes = {};\n\nLogin.defaultProps = {};\n\nexport default Login;\n","import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Register.module.css';\nimport { Card, Form, Row, Button } from 'react-bootstrap';\nimport { Link, useNavigate } from 'react-router-dom';\n\nconst Register = ({ setJwt }) => {\n\n  const nameRef = useRef('');\n  const emailRef = useRef('');\n  const passwordRef = useRef('');\n  const [errorMsg, setErrorMsg] = useState('');\n  const navigate = useNavigate();\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n\n    // Sends a request to add a new user with the current values of the refs\n    const response = await fetch(`${process.env.REACT_APP_BASE_URL}/users`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        name: nameRef.current.value,\n        email: emailRef.current.value,\n        password: passwordRef.current.value\n      }),\n    });\n    if (!response.ok) return setErrorMsg(await response.text());\n    \n    setErrorMsg('');\n\n    // set our jwt as the response body\n    await setJwt(await response.text());\n    \n    \n    // await setJwt(response.headers['x-auth-token']);\n   \n    navigate('../', { replace: true });\n    \n    // then popup\n    \n  }\n\n  return (\n  <div className={styles.Register}>\n    <Card >\n      <Card.Header>\n        <Card.Title as='h3'>Register</Card.Title>\n        </Card.Header>\n      <Card.Body className={styles.cardBody}>\n          <Form onSubmit={handleRegister}>\n          <Row className='mb-3'>\n          <Form.Group className={styles.group}>\n              <Form.Label className=''>Name</Form.Label>\n              <Form.Control type='text' ref={nameRef} placeholder='John Doe' />\n            </Form.Group>\n            </Row>\n            <Row className='mb-3'>\n            <Form.Group className={styles.group}>\n              <Form.Label className=''>Email</Form.Label>\n              <Form.Control type='text' ref={emailRef} placeholder='john@email.com' />\n            </Form.Group>\n            </Row>\n            <Row className='mb-1'>\n            <Form.Group className={styles.group}>\n              <Form.Label className=''>Password</Form.Label>\n              <Form.Control type='password' ref={passwordRef} />\n            </Form.Group>\n            </Row>\n            <Row className='mb-4'><Form.Text className=\"text-muted\">We won't share your info with anyone, we promise.</Form.Text></Row>\n            <Button variant='primary' type='submit' className='mb-2'>Register</Button>\n          </Form>\n          <Link to='/login'>Already have an account?</Link>\n          {errorMsg !== '' && <Card.Text className='text-danger mt-2'>{errorMsg}</Card.Text>}\n      </Card.Body>\n    </Card>\n  </div>\n)}\n\nRegister.propTypes = {};\n\nRegister.defaultProps = {};\n\nexport default Register;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Home.module.css';\nimport { Card, Button, Container } from 'react-bootstrap';\nconst Home = ({ userInfo, logout }) => (\n  <div className={styles.Home}>\n    <Container>\n      \n      \n      <Card>\n        <Card.Header>You logged in as <b>{userInfo.name}</b>.</Card.Header>\n        <div className={styles.content}>\n      <b>name </b><div>{userInfo.name}</div>\n      <b>email </b><div>{userInfo.email}</div>\n      </div>\n      <div><Button className='my-2' onClick={logout}>Logout</Button></div>\n      \n      </Card>\n      \n    </Container>\n  </div>\n)\n\nHome.propTypes = {};\n\nHome.defaultProps = {};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Loader.module.css';\n\nconst Loader = () => (\n  <div className={styles.Loader}>\n    <div className='loader'></div>\n  </div>\n);\n\nLoader.propTypes = {};\n\nLoader.defaultProps = {};\n\nexport default Loader;\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Home from './components/Home/Home';\nimport { useEffect, useState } from 'react';\nimport Loader from './components/Loader/Loader';\n\nfunction App() {\n\n  const [jwt, setJwt] = useState('');\n  const [userInfo, setUserInfo] = useState(null);\n\n  useEffect(() => {\n    if (jwt === '') return;\n    // When the jwt is updated a request will be sent which returns the user's info\n    // and sets userInfo to this object. This will change the component that is displayed\n    // when visiting the root path.\n    (async () => {\n      const res = await fetch(`${process.env.REACT_APP_BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: { \n          'Content-Type': 'application/json',\n          'x-auth-token': jwt\n        },\n      });\n      if(res.ok) setUserInfo(await res.json()); \n    })();\n  }, [jwt]);\n\n  const logout = () => {\n    // Resets jwt and user info which will change the component displayed on the root path.\n    setJwt('');\n    setUserInfo(null);\n  }\n\n  // When the user goes to the root path, by default when there is no jwt the user \n  // will be redirected to /login \n  // When the user has a jwt, a request will be sent to obtain the info for that user\n  // While the userInfo is still null (so while the request is being processed) a loader is displayed\n  // Once the request is processed (and userInfo is no longer null) the Home component will be rendered.\n  return (\n    <div className=\"App\">\n        <Container fluid className='app-container'>\n          <header className='mb-5'><h1>Website Name</h1></header>\n          <Router>\n            <Routes>\n              {jwt !== '' && userInfo !== null && <Route path='/' element={<Home userInfo={userInfo} logout={logout} />} />}\n              {jwt !== '' && userInfo === null && <Route path='/' element={<Loader />}/>}\n              {jwt === '' && <Route path='/' element={<Navigate to='/login' />} />}\n              <Route path='login' element={<Login setJwt={setJwt} />} />\n              <Route path='register' element={<Register setJwt={setJwt} />} />\n            </Routes>\n          </Router>\n          \n        </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}